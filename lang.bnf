program ::= stmt*
stmt ::= expr ';' | let_stmt
let_stmt ::= 'let' ident '=' expr ';'
expr ::= eql
eql ::= rel ('=' rel | '~=' rel)*
rel ::= add ('<' add | '<=' add | '>' add | '>=' add)*
add ::= unary ('+' mul | '-' mul)*
unary ::= '-'? mul
mul ::= primary ('*' primary | '/' primary)*
primary ::= number | ident | '(' expr ')'